
%%Ve de l'algorisme sintaxiDunitats.ps

%% ara és a tallerdetipografia_componedoraRIMDA00.ps
%/AparellMB exch def  %% desem l'array del parell /nomDelBlanc (valor)

%% fem que la sintaxi que descriu cadascuna de les peces de mesures de blanc sigui prou flexible i simple
%% llegim caràcter a caràcter provinent de les variables de la URL que ha de compondre la línia
%% el forall llegeix els caràcters de l'string i avalua el què cal fer
%% p i P punts
%% c i C cíceros
%% g i G girar 90 graus
%% / tocarà dividir pel dígit següent
%% 2 3 4 dígits divisors precedits per /
%% 1 digit a eliminar quan forma part d'una fracció 1/2 1/3 1/4
%% l'espai en blanc (32), com a separador, o qualsevol altre caràcter que no sigui els ja citats

%% gatells
/cos false def  %% gatell que activa el fet que ja haguem definit el cos de la peça (ara no és actiu)
/gruix false def  %% gatell que activa el fet que ja haguem definit el gruix de la peça (ara no és actiu)

/ivalor 0 def  %% comptem quants valors de mesura hem desat
/units false def  %% gatell per saber si s'han definit les unitats
/digit false def  %% gatell per saber si estem construint un dígit de mesura
/pdeci false def  %% gatell per saber si estem escrivint un valor decimal
/frcc false def  %% gatell per saber si ens cal escriure el procediment divisor de la fracció

/hies [] def  %% array per consultar si la peça existeix (ha de ser sense girar!)
/peçaD [] def  %% array per desar l'alt i gruix definitiu que farà la peça en punts Didot abans de pintar-la (per tant ja ha d'estar girada si duu g o G?)

%% reescrivim en una string el valor numèric de la peça
/NMRC 8 string def  %% aquesta string, com a molt poc, contindrà punts (mai un motlle farà més de 3 metres!) o procediments tipus... {2 div}
NMRC /NullEncode filter /fNMRC exch def

%% exemples de sintaxi d'1 sola peça a llegir
%% podrem simplificant la sintaxi amb només 1 valor (tret de les que aniran girades) perquè el cos ha de ser idèntic per totes les peces del reng
%(  26  54 )  %% FUNCIONA dos enters separats per qualsevol nombre d'espais en blanc, entremig o al davant o al darrere, i sense unitats (llavors són punts)
%(!!tsts 26  @  )  %% FUNCIONA un sol enter separat per qualsevol nombre d'espais en blanc o altres caràcters, al davant o al darrere, i sense unitats (llavors són punts)
%(09 58 C)  %% FUNCIONA tot separat sense unitats el cos i gruix si (llavors són punts)
%(09 58C)  %% FUNCIONA
%( 09 c 58 c )  %% FUNCIONA
%(09 c 58 c)  %% FUNCIONA
%(0009c 58c)  %% FUNCIONA posem el buffer a 8 dígits
%(98p51P )  %% FUNCIONA tota mena de combinació d'espai i caixes
%(66c77 p)  %% FUNCIONA tota mena de combinació d'espai i caixes
%% FUNCIONA tota mena de combinació d'espai i caixes
%(26p54Pg)  %% tot junt caixes diferents d'unitats i gir
%(2 c 2 C G)  %% tot separat caixes diferents d'unitats i gir
%(26p54Pg)  %% tot enganxat caixes diferents d'unitats i gir
%(26 54G)  %% tot enganxat caixes diferents falta una unitat però amb gir
%(#26 !  p 54kG)  %% espaiats diferents i altres caràcters que NO llegim
%(14 1/2g)  %% les tres fraccions divisores del cos que donen l'amplada de la peça
%(1/2)  %% a /hies evitem d'escriure l'1 i expressem el divisor amb {2 div}
%(14 1/3)
%(14 1/4)
%(8p1/2P180g)  %% aquesta sintaxi ja serviria per peces que no fossin blancs

%% ara ve de tallerdetipografia_componedoraRIMDA00.ps
%AparellMB 1 get  %% l'string amb el valor

{  %% forall lector del valor d'ample d'1 peça

 %% dígits numèrics de zero a nou
 %% 48 49 50 51 52 53 54 55 56 57  %% de 0 a 9
 dup 48 ge 1 index 57 le and  %% és un dígit numèric?
 {
%(ES UN DIGIT NUMERIC!)==  %quit
  digit
  {  %% seguim escrivint sobre el buffer
   frcc
   {
    ({  div}) dup 3 -1 roll 1 exch put
    fNMRC exch writestring
    /frcc false def
   }
   {
    fNMRC exch write
   }ifelse
  }
  {  %% inicialitzem el buffer
   fNMRC exch write  %% escriu el valor numèric de la peça, dígit a dígit

   /digit true def  %% gatell per saber si estem construint un dígit de mesura
   /units false def
   /sp false def
   /pdeci false def
  }ifelse
 }
 {
  dup 46 eq  %% és un punt decimal?
  {
   %% si digit i pdeci són tots dos a false o tots dos a true, és un punt aïllat o repetit dins la notació, i l'obviem
   digit pdeci eq
   {  %% és un punt aïllat o repetit dins la notació, i l'obviem
    digit pdeci and
    {  %% tots dos a true, evita l'error d'1 punt afegit o+ després d'un altre dígit decimal ja vàlid
     pop
    }
    {
     pop
     /pdeci false def
     /digit false def
    }ifelse
   }
   {
    digit
    {
     pdeci
     {  %% és un punt repetit dins la notació, i l'obviem
      pop
      /pdeci false def
      /digit false def
     }
     {
      fNMRC exch write  %% escriu el punt decimal del valor numèric de la peça
      /pdeci true def
     }ifelse
    }
    {  %% és un punt aïllat o repetit dins la notació, i l'obviem
     pop
     /pdeci false def
    }ifelse
   }ifelse
  }
  {
   %% 112 p i 80 P
   dup 112 eq 1 index 80 eq or  %% és un dígit d'unitat punts?
   {
%(SON PUNTS)==  %quit

    %% desem el dígit allà on toqui
    %fNMRC dup flushfile closefile NMRC == quit

    %% reescrivim en una string les unitats del valor numèric de la peça
    %/UNTTS 1 string def
    %UNITS /NullEncode filter /fUNTTS exch def

    digit
    {
     ivalor 1 add /ivalor exch def
     fNMRC dup flushfile closefile  %% fluxem el fitxer per tancar el valor de la cadena
     %% desem la mesura a l'array de consulta a les taules de peces en blanc existents
     hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
     dup araVa NMRC cvx exec put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
     %% inicialitzem la cadena d'escriptura dels valors numèrics
     /NMRC 8 string def  %% aquesta string, com a molt poc, contindrà punts i mai un motlle farà més de 3 metres!
     NMRC /NullEncode filter /fNMRC exch def
    }if

    /digit false def  %% gatell per saber si estem construint un dígit de mesura
    /units true def
    /sp false def

    hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
    dup araVa /p put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
   }
   {
    %% 99 c i 67 C
    dup 99 eq 1 index 67 eq or  %% és un dígit d'unitat cíceros?
    {
%hies ==
%ivalor ==
%(SON CICEROS)== %quit
%    %% desem el dígit allà on toqui
%    fNMRC dup flushfile  %closefile
%NMRC == quit

     digit
     {
      ivalor 1 add /ivalor exch def
      fNMRC dup flushfile closefile  %% fluxem el fitxer per tancar el valor de la cadena
      %% desem la mesura a l'array de consulta a les taules de peces en blanc existents
      hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
      dup araVa NMRC cvx exec put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
      %% inicialitzem la cadena d'escriptura dels valors numèrics
      /NMRC 8 string def  %% aquesta string, com a molt poc, contindrà punts i mai un motlle farà més de 3 metres!
      NMRC /NullEncode filter /fNMRC exch def
     }if

     /digit false def  %% gatell per saber si estem construint un dígit de mesura
     /units true def
     /sp false def

     %% reescrivim en una string les unitats del valor numèric de la peça
%    /UNITS 1 string def
%    UNITS /NullEncode filter /fUNTTS exch def

     hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
     dup araVa /c put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
    }
    {
     %% / 47
     dup 47 eq  %% és una barra que precedeix un dígit de fracció?
     {
      pop
      %% per eliminar l'1 de la fracció inicialitzem la cadena/fitxer d'escriptura dels valors numèrics
      /NMRC 8 string def  %% aquesta string, com a molt poc, contindrà punts i mai un motlle farà més de 3 metres!
      NMRC /NullEncode filter /fNMRC exch def
%(FRACCIO)==  %quit
      /digit true def  %% gatell per saber si estem construint un dígit de mesura
      /frcc true def  %% gatell per saber que el proper enter ha de dividir el cos
     }
     {
      %% 103 g i 71 G
      dup 103 eq 1 index 71 eq or  %% és un dígit per girar la peça?
      {
%(GIREM)==  %quit
       %% desem el dígit allà on toqui
       %fNMRC dup flushfile closefile NMRC == quit

       digit
       {
        ivalor 1 add /ivalor exch def
        fNMRC dup flushfile closefile  %% fluxem el fitxer per tancar el valor de la cadena
        %% desem la mesura a l'array de consulta a les taules de peces en blanc existents
        hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
        dup araVa NMRC cvx exec put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
        %% inicialitzem la cadena d'escriptura dels valors numèrics
        /NMRC 8 string def  %% aquesta string, com a molt poc, contindrà punts i mai un motlle farà més de 3 metres!
        NMRC /NullEncode filter /fNMRC exch def
       }if

       /digit false def  %% gatell per saber si estem construint un dígit de mesura
       /units true def
       /sp false def

       hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
       dup araVa /g put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
      }
      {  %% pot ser un espai en blanc separador o qualsevol altre caràcter que no contemplem però que, de moment, podem donar com a equivalent a un separador
%(UN ESPAI EN BLANC O UN CARACTER DESCONEGUT)==
       pop  %% de moment, no l'analitzem
       digit
       {  %% sempre que abans haguem llegit el dígit d'un valor (evita l'error quan hi ha 1 o més espais en blanc o caràcters desconeguts)

        ivalor 2 eq not
        {

         ivalor 1 add /ivalor exch def
         fNMRC dup flushfile closefile  %% fluxem el fitxer per tancar el valor de la cadena
         %% desem la mesura a l'array de consulta a les taules de peces en blanc existents
         hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
         dup araVa NMRC cvx exec put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
         %% inicialitzem la cadena d'escriptura dels valors numèrics
         /NMRC 8 string def  %% aquesta string, com a molt poc, contindrà punts i mai un motlle farà més de 3 metres!
         NMRC /NullEncode filter /fNMRC exch def

        }if
       }if

       /digit false def  %% gatell per saber si estem construint un dígit de mesura
       /sp true def

      }ifelse  %% és un dígit per girar la peça o una altra cosa?
     }ifelse  %% és un dígit de fració o una altra cosa?
    }ifelse  %% és la unitat cíceros o una altra cosa?
   }ifelse  %% és la unitat punts o una altra cosa?
  }ifelse  %% és un punt decimal o una altra cosa?
 }ifelse  %% és un dígit numèric o una altra cosa?

}forall  %% forall lector del valor d'ample d'1 peça

%% cal posar un avaluador de quan fem això!
fNMRC dup flushfile closefile  %% fluxem el fitxer per tancar el valor de la cadena

0 NMRC
{  %% el buffer és buit?
 add
}forall

0 ne
{
 %% desem la mesura a l'array de consulta a les taules de peces en blanc existents
 hies dup length dup /araVa exch def 1 add array dup 3 -1 roll 0 exch putinterval  %% ampliem l'array
 dup araVa NMRC cvx exec put /hies exch def  %% hi incrustem el nou valor numèric desat dins la cadena i el tornem a desar
}if

